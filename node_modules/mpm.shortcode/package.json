{
  "name": "mpm.shortcode",
  "version": "0.0.22",
  "description": "shortcode api for nodejs, nano templating library",
  "main": "shortcode.js",
  "scripts": {
    "test": "mocha -R list"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Mparaiso/mpm.shortcode.git"
  },
  "keywords": [
    "shortcode",
    "templating",
    "strings",
    "utility"
  ],
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "author": {
    "name": "mparaiso"
  },
  "license": "LGPL",
  "bugs": {
    "url": "https://github.com/Mparaiso/mpm.shortcode/issues"
  },
  "readme": "mpm.shortcode \r\n=============\r\n\r\n[![Build Status](https://travis-ci.org/Mparaiso/mpm.shortcode.png?branch=master)](https://travis-ci.org/Mparaiso/mpm.shortcode)\r\n\r\n[![NPM](https://nodei.co/npm/mpm.shortcode.png?downloads=true)](https://nodei.co/npm/mpm.shortcode/)\r\n\r\n\r\nauthor mparaiso <mparaiso@online.fr>\r\n\r\nlicense LGPL\r\n\r\nnano templating for nodejs and the browser. \r\n\r\n__ShortCode__ allows javascript developpers to use a nano templating engine in their application.\r\n\r\nIn a cms for instance , a content field can support shortcodes and allow users to write complex content\r\nwithout knowing HTML ( integrate a video player in a page for instance), and without the app allowing \r\nthe user to directly write HTML tags.\r\n\r\n####INSTALLATION\r\nnpm install mpm.shorcode\r\n\r\n####USAGE\r\n\r\n\tvar shortcode = require('mpm.shortcode');\r\n\t// you can pass a context to the shortcode, \r\n\t// which will be avaiable to each shortcode.\r\n\tcontext = { name:'foo'};\r\n\tvar myShortCodes =  shortcode.create(context);\r\n\t// let's define our first shortcode , that yields a video tag\r\n\tvar myShortCodes.add('video',function(attributes,content,context){\r\n\t\treturn \"<video src='\"+attributes.src+\"' >\"+content+\"</video>\";\r\n\t});\r\n\t//debug mode\r\n\tmyShortCodes.setDebug(true);\r\n\t//a string will get evaluated\r\n\tvar string = \"[video src='video.mp4']No video Support[/video]\"\r\n\tvar result = myShortCodes.parse(string);\r\n\tconsole.log(result)\r\n\t/**\r\n\t * will yield : \r\n\t * <video src='video.mp4'>No video Support</video>\r\n\t */\r\n\t\r\nShortcodes can have closing tags or not :\r\n\r\n- [foo bar=\"baz\"/]\r\n- [bar foo=\"fizz\"]\r\n- [baz fizz=\"foo\"] content [/baz]\r\n\r\nare valid shortcodes.\r\n\r\n\t\r\n####LIMITATIONS\r\n\r\n- shortcodes cannot be nested ( FOR NOW )\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/Mparaiso/mpm.shortcode",
  "_id": "mpm.shortcode@0.0.22",
  "_shasum": "871f42c114dedf02e51b86e62e7779ba7a325248",
  "_from": "mpm.shortcode@",
  "_resolved": "https://registry.npmjs.org/mpm.shortcode/-/mpm.shortcode-0.0.22.tgz"
}
